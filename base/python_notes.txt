1.python除法类型
>>> type(2/2)
<class 'float'>
>>> type(2//2)
<class 'int'>
>>> 1//2
0
>>> type(1//2)
<class 'int'>

2.进制
0b:二进制   0o:八进制   0x:十六进制
转十进制：0b1010   0o123   0x123
转二进制：bin(10)  bin(0o10)  bin(0x10)
转八进制：oct(10)  oct(0b1010)  oct(0x10)
转十六进制：hex(10)  hex(0b1010)  hex(0o10)

3.复数
complex
表示复数:
>>> 37j
37j

4.bool类型
bool类型是属于数字大分类下的一种！
>>> int(True)
1
>>> int(False)
0
>>> bool(1)
True
>>> bool(0)
False
>>> bool(2)
True
>>> bool(2.2)
True
>>> bool(-1.1)
True
>>> bool(0)
False
>>> bool('abc')
True
>>> bool('')
False
>>> bool('0')
True



5：线程与进程 
1).概念 
线程：是程序执行流的最小单元，是系统独立调度和分配CPU（独立运行）的基本单位。 
进程：是资源分配的基本单位。一个进程包括多个线程。 
2).区别： 
a.线程与资源分配无关，它属于某一个进程，并与进程内的其他线程一起共享进程的资源。 
b.每个进程都有自己一套独立的资源（数据），供其内的所有线程共享。 
c.不论是大小，开销线程要更“轻量级” 
d.一个进程内的线程通信比进程之间的通信更快速，有效。（因为共享变量）
3).多线程与多进程 
多线程：同一时刻执行多个线程。用浏览器一边下载，一边听歌，一边看视频，一边看网页。。。 
多进程：同时执行多个程序。如，同事运行YY，QQ，以及各种浏览器。
4).并发与并行 
并发：当有多个线程在操作时,如果系统只有一个CPU,则它根本不可能真正同时进行一个以上的线程，它只能把CPU运行时间划分成若干个时间段,再将时间 段分配给各个线程执行，在一个时间段的线程代码运行时，其它线程处于挂起状。.这种方式我们称之为并发(Concurrent)。
并行：当系统有一个以上CPU时,则线程的操作有可能非并发。当一个CPU执行一个线程时，另一个CPU可以执行另一个线程，两个线程互不抢占CPU资源，可以同时进行，这种方式我们称之为并行(Parallel)